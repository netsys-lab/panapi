// Code generated by "stringer -type=Preference,MultipathPreference,MultipathPolicy,Directionality,CapacityProfile,StreamScheduler,ConnectionState -output enum_string.go"; DO NOT EDIT.

package taps

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[unset-0]
	_ = x[Ignore-1]
	_ = x[Require-2]
	_ = x[Prefer-3]
	_ = x[Avoid-4]
	_ = x[Prohibit-5]
}

const _Preference_name = "unsetIgnoreRequirePreferAvoidProhibit"

var _Preference_index = [...]uint8{0, 5, 11, 18, 24, 29, 37}

func (i Preference) String() string {
	if i >= Preference(len(_Preference_index)-1) {
		return "Preference(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Preference_name[_Preference_index[i]:_Preference_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[dynamic-0]
	_ = x[Disabled-1]
	_ = x[Active-2]
	_ = x[Passive-3]
}

const _MultipathPreference_name = "dynamicDisabledActivePassive"

var _MultipathPreference_index = [...]uint8{0, 7, 15, 21, 28}

func (i MultipathPreference) String() string {
	if i >= MultipathPreference(len(_MultipathPreference_index)-1) {
		return "MultipathPreference(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MultipathPreference_name[_MultipathPreference_index[i]:_MultipathPreference_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Handover-0]
	_ = x[Interactive-1]
	_ = x[Aggregate-2]
}

const _MultipathPolicy_name = "HandoverInteractiveAggregate"

var _MultipathPolicy_index = [...]uint8{0, 8, 19, 28}

func (i MultipathPolicy) String() string {
	if i >= MultipathPolicy(len(_MultipathPolicy_index)-1) {
		return "MultipathPolicy(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MultipathPolicy_name[_MultipathPolicy_index[i]:_MultipathPolicy_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Bidirectional-0]
	_ = x[UnidirectionalSend-1]
	_ = x[UnidirectionalReceive-2]
}

const _Directionality_name = "BidirectionalUnidirectionalSendUnidirectionalReceive"

var _Directionality_index = [...]uint8{0, 13, 31, 52}

func (i Directionality) String() string {
	if i >= Directionality(len(_Directionality_index)-1) {
		return "Directionality(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Directionality_name[_Directionality_index[i]:_Directionality_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Default-0]
	_ = x[Scavenger-1]
	_ = x[LowLatencyInteractive-2]
	_ = x[LowLatencyNonInteractive-3]
	_ = x[ConstantRateStreaming-4]
	_ = x[CapacitySeeking-5]
}

const _CapacityProfile_name = "DefaultScavengerLowLatencyInteractiveLowLatencyNonInteractiveConstantRateStreamingCapacitySeeking"

var _CapacityProfile_index = [...]uint8{0, 7, 16, 37, 61, 82, 97}

func (i CapacityProfile) String() string {
	if i >= CapacityProfile(len(_CapacityProfile_index)-1) {
		return "CapacityProfile(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CapacityProfile_name[_CapacityProfile_index[i]:_CapacityProfile_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SCTP_SS_FCFS-0]
	_ = x[SCTP_SS_RR-1]
	_ = x[SCTP_SS_RR_PKT-2]
	_ = x[SCTP_SS_PRIO-3]
	_ = x[SCTP_SS_FC-4]
	_ = x[SCTP_SS_WFQ-5]
}

const _StreamScheduler_name = "SCTP_SS_FCFSSCTP_SS_RRSCTP_SS_RR_PKTSCTP_SS_PRIOSCTP_SS_FCSCTP_SS_WFQ"

var _StreamScheduler_index = [...]uint8{0, 12, 22, 36, 48, 58, 69}

func (i StreamScheduler) String() string {
	if i >= StreamScheduler(len(_StreamScheduler_index)-1) {
		return "StreamScheduler(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StreamScheduler_name[_StreamScheduler_index[i]:_StreamScheduler_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Establishing-0]
	_ = x[Established-1]
	_ = x[Closing-2]
	_ = x[Closed-3]
}

const _ConnectionState_name = "EstablishingEstablishedClosingClosed"

var _ConnectionState_index = [...]uint8{0, 12, 23, 30, 36}

func (i ConnectionState) String() string {
	if i >= ConnectionState(len(_ConnectionState_index)-1) {
		return "ConnectionState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectionState_name[_ConnectionState_index[i]:_ConnectionState_index[i+1]]
}
